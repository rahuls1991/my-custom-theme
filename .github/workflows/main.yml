name: Auto Release Block Theme

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write   # needed to create tags + releases

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # 🔹 Step 1: Validate PHP syntax
      - name: Validate PHP
        run: |
          echo "Checking PHP syntax..."
          find . -type f -name "*.php" -print0 | xargs -0 -n1 -P4 php -l

      # 🔹 Step 2: Validate JSON files (theme.json, block patterns, etc.)
      - name: Validate JSON
        run: |
          echo "Validating JSON files..."
          find . -type f -name "*.json" -exec jq empty {} \;

      # 🔹 Step 3: Validate block template HTML files
      - name: Validate Block Templates
        run: |
          echo "Checking block templates..."
          for file in $(find ./templates ./parts -type f -name "*.html"); do
            if ! grep -q "<!-- wp:" "$file"; then
              echo "⚠️ Warning: $file may not contain block markup"
            fi
          done

      # 🔹 Step 4: Extract version from style.css
      - name: Extract version from style.css
        id: get_version
        run: |
          VERSION=$(grep -i "Version:" style.css | awk '{print $2}')
          if [ -z "$VERSION" ]; then
            echo "❌ ERROR: No Version found in style.css"
            exit 1
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Found version: $VERSION"

      # 🔹 Step 5: Ensure version was updated in this commit
      - name: Check if style.css version changed
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -q "style.css"; then
            echo "✅ style.css was modified in this commit"
          else
            echo "❌ ERROR: style.css version not updated in this commit."
            exit 1
          fi

      # 🔹 Step 6: Check if tag already exists
      - name: Check if tag already exists
        id: check_tag
        run: |
          TAG="v${{ env.VERSION }}"
          if git ls-remote --tags origin | grep -q "refs/tags/$TAG"; then
            echo "exists=true" >> $GITHUB_ENV
          else
            echo "exists=false" >> $GITHUB_ENV
          fi

      # 🔹 Step 7: Create Git tag (only if validation passed and tag doesn’t exist)
      - name: Create Git tag
        if: env.exists == 'false'
        run: |
          TAG="v${{ env.VERSION }}"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "$TAG" -m "Release $TAG"
          git push origin "$TAG"

      # 🔹 Step 8: Create GitHub Release
      - name: Create GitHub Release
        if: env.exists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: v${{ env.VERSION }}
          generate_release_notes: true
